{"ast":null,"code":"'use client';\n\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nconst _excluded = [\"axisDirection\", \"axisId\", \"hideFirst\", \"hideLast\", \"labelFormatter\", \"onItemClick\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport { useAxis } from \"./useAxis.js\";\nimport { LegendPerItem } from \"./LegendPerItem.js\";\nimport { notNull } from \"../internals/notNull.js\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nfunction defaultLabelFormatter(params) {\n  if (params.min === null) {\n    return `<${params.formattedMax}`;\n  }\n  if (params.max === null) {\n    return `>${params.formattedMin}`;\n  }\n  return `${params.formattedMin}-${params.formattedMax}`;\n}\nconst piecewiseColorContextBuilder = context => ({\n  type: 'piecewiseColor',\n  color: context.color,\n  label: context.label,\n  maxValue: context.maxValue,\n  minValue: context.minValue\n});\nfunction PiecewiseColorLegend(props) {\n  const {\n      axisDirection,\n      axisId,\n      hideFirst,\n      hideLast,\n      labelFormatter = defaultLabelFormatter,\n      onItemClick\n    } = props,\n    other = _objectWithoutPropertiesLoose(props, _excluded);\n  const axisItem = useAxis({\n    axisDirection,\n    axisId\n  });\n  const colorMap = axisItem?.colorMap;\n  if (!colorMap || !colorMap.type || colorMap.type !== 'piecewise') {\n    return null;\n  }\n  const valueFormatter = v => axisItem.valueFormatter?.(v, {\n    location: 'legend'\n  }) ?? v.toLocaleString();\n  const formattedLabels = colorMap.thresholds.map(valueFormatter);\n  const itemsToDisplay = colorMap.colors.map((color, index) => {\n    const isFirst = index === 0;\n    const isLast = index === colorMap.colors.length - 1;\n    if (hideFirst && isFirst || hideLast && isLast) {\n      return null;\n    }\n    const data = _extends({}, isFirst ? {\n      min: null,\n      formattedMin: null\n    } : {\n      min: colorMap.thresholds[index - 1],\n      formattedMin: formattedLabels[index - 1]\n    }, isLast ? {\n      max: null,\n      formattedMax: null\n    } : {\n      max: colorMap.thresholds[index],\n      formattedMax: formattedLabels[index]\n    });\n    const label = labelFormatter(data);\n    if (label === null) {\n      return null;\n    }\n    return {\n      id: label,\n      color,\n      label,\n      minValue: data.min,\n      maxValue: data.max\n    };\n  }).filter(notNull);\n  return /*#__PURE__*/_jsx(LegendPerItem, _extends({}, other, {\n    itemsToDisplay: itemsToDisplay,\n    onItemClick: onItemClick ? (event, i) => onItemClick(event, piecewiseColorContextBuilder(itemsToDisplay[i]), i) : undefined\n  }));\n}\nprocess.env.NODE_ENV !== \"production\" ? PiecewiseColorLegend.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // | To update them edit the TypeScript types and run \"pnpm proptypes\"  |\n  // ----------------------------------------------------------------------\n  /**\n   * The axis direction containing the color configuration to represent.\n   * @default 'z'\n   */\n  axisDirection: PropTypes.oneOf(['x', 'y', 'z']),\n  /**\n   * The id of the axis item with the color configuration to represent.\n   * @default The first axis item.\n   */\n  axisId: PropTypes.oneOfType([PropTypes.number, PropTypes.string]),\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n  /**\n   * The direction of the legend layout.\n   * The default depends on the chart.\n   */\n  direction: PropTypes.oneOf(['column', 'row']).isRequired,\n  /**\n   * Hide the first item of the legend, corresponding to the [-infinity, min] piece.\n   * @default false\n   */\n  hideFirst: PropTypes.bool,\n  /**\n   * Hide the last item of the legend, corresponding to the [max, +infinity] piece.\n   * @default false\n   */\n  hideLast: PropTypes.bool,\n  /**\n   * Space between two legend items (in px).\n   * @default 10\n   */\n  itemGap: PropTypes.number,\n  /**\n   * Height of the item mark (in px).\n   * @default 20\n   */\n  itemMarkHeight: PropTypes.number,\n  /**\n   * Width of the item mark (in px).\n   * @default 20\n   */\n  itemMarkWidth: PropTypes.number,\n  /**\n   * Format the legend labels.\n   * @param {PiecewiseLabelFormatterParams} params The bound of the piece to format.\n   * @returns {string|null} The displayed label, or `null` to skip the item.\n   */\n  labelFormatter: PropTypes.func,\n  /**\n   * Style applied to legend labels.\n   * @default theme.typography.subtitle1\n   */\n  labelStyle: PropTypes.object,\n  /**\n   * Space between the mark and the label (in px).\n   * @default 5\n   */\n  markGap: PropTypes.number,\n  /**\n   * Callback fired when a legend item is clicked.\n   * @param {React.MouseEvent<SVGRectElement, MouseEvent>} event The click event.\n   * @param {PiecewiseColorLegendItemContext} legendItem The legend item data.\n   * @param {number} index The index of the clicked legend item.\n   */\n  onItemClick: PropTypes.func,\n  /**\n   * Legend padding (in px).\n   * Can either be a single number, or an object with top, left, bottom, right properties.\n   * @default 10\n   */\n  padding: PropTypes.oneOfType([PropTypes.number, PropTypes.shape({\n    bottom: PropTypes.number,\n    left: PropTypes.number,\n    right: PropTypes.number,\n    top: PropTypes.number\n  })]),\n  /**\n   * The position of the legend.\n   */\n  position: PropTypes.shape({\n    horizontal: PropTypes.oneOf(['left', 'middle', 'right']).isRequired,\n    vertical: PropTypes.oneOf(['bottom', 'middle', 'top']).isRequired\n  }).isRequired\n} : void 0;\nexport { PiecewiseColorLegend };","map":{"version":3,"names":["_extends","_objectWithoutPropertiesLoose","_excluded","React","PropTypes","useAxis","LegendPerItem","notNull","jsx","_jsx","defaultLabelFormatter","params","min","formattedMax","max","formattedMin","piecewiseColorContextBuilder","context","type","color","label","maxValue","minValue","PiecewiseColorLegend","props","axisDirection","axisId","hideFirst","hideLast","labelFormatter","onItemClick","other","axisItem","colorMap","valueFormatter","v","location","toLocaleString","formattedLabels","thresholds","map","itemsToDisplay","colors","index","isFirst","isLast","length","data","id","filter","event","i","undefined","process","env","NODE_ENV","propTypes","oneOf","oneOfType","number","string","classes","object","direction","isRequired","bool","itemGap","itemMarkHeight","itemMarkWidth","func","labelStyle","markGap","padding","shape","bottom","left","right","top","position","horizontal","vertical"],"sources":["D:/Vaishali/demo2/node_modules/@mui/x-charts/ChartsLegend/PiecewiseColorLegend.js"],"sourcesContent":["'use client';\n\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nconst _excluded = [\"axisDirection\", \"axisId\", \"hideFirst\", \"hideLast\", \"labelFormatter\", \"onItemClick\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport { useAxis } from \"./useAxis.js\";\nimport { LegendPerItem } from \"./LegendPerItem.js\";\nimport { notNull } from \"../internals/notNull.js\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nfunction defaultLabelFormatter(params) {\n  if (params.min === null) {\n    return `<${params.formattedMax}`;\n  }\n  if (params.max === null) {\n    return `>${params.formattedMin}`;\n  }\n  return `${params.formattedMin}-${params.formattedMax}`;\n}\nconst piecewiseColorContextBuilder = context => ({\n  type: 'piecewiseColor',\n  color: context.color,\n  label: context.label,\n  maxValue: context.maxValue,\n  minValue: context.minValue\n});\nfunction PiecewiseColorLegend(props) {\n  const {\n      axisDirection,\n      axisId,\n      hideFirst,\n      hideLast,\n      labelFormatter = defaultLabelFormatter,\n      onItemClick\n    } = props,\n    other = _objectWithoutPropertiesLoose(props, _excluded);\n  const axisItem = useAxis({\n    axisDirection,\n    axisId\n  });\n  const colorMap = axisItem?.colorMap;\n  if (!colorMap || !colorMap.type || colorMap.type !== 'piecewise') {\n    return null;\n  }\n  const valueFormatter = v => axisItem.valueFormatter?.(v, {\n    location: 'legend'\n  }) ?? v.toLocaleString();\n  const formattedLabels = colorMap.thresholds.map(valueFormatter);\n  const itemsToDisplay = colorMap.colors.map((color, index) => {\n    const isFirst = index === 0;\n    const isLast = index === colorMap.colors.length - 1;\n    if (hideFirst && isFirst || hideLast && isLast) {\n      return null;\n    }\n    const data = _extends({}, isFirst ? {\n      min: null,\n      formattedMin: null\n    } : {\n      min: colorMap.thresholds[index - 1],\n      formattedMin: formattedLabels[index - 1]\n    }, isLast ? {\n      max: null,\n      formattedMax: null\n    } : {\n      max: colorMap.thresholds[index],\n      formattedMax: formattedLabels[index]\n    });\n    const label = labelFormatter(data);\n    if (label === null) {\n      return null;\n    }\n    return {\n      id: label,\n      color,\n      label,\n      minValue: data.min,\n      maxValue: data.max\n    };\n  }).filter(notNull);\n  return /*#__PURE__*/_jsx(LegendPerItem, _extends({}, other, {\n    itemsToDisplay: itemsToDisplay,\n    onItemClick: onItemClick ? (event, i) => onItemClick(event, piecewiseColorContextBuilder(itemsToDisplay[i]), i) : undefined\n  }));\n}\nprocess.env.NODE_ENV !== \"production\" ? PiecewiseColorLegend.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // | To update them edit the TypeScript types and run \"pnpm proptypes\"  |\n  // ----------------------------------------------------------------------\n  /**\n   * The axis direction containing the color configuration to represent.\n   * @default 'z'\n   */\n  axisDirection: PropTypes.oneOf(['x', 'y', 'z']),\n  /**\n   * The id of the axis item with the color configuration to represent.\n   * @default The first axis item.\n   */\n  axisId: PropTypes.oneOfType([PropTypes.number, PropTypes.string]),\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n  /**\n   * The direction of the legend layout.\n   * The default depends on the chart.\n   */\n  direction: PropTypes.oneOf(['column', 'row']).isRequired,\n  /**\n   * Hide the first item of the legend, corresponding to the [-infinity, min] piece.\n   * @default false\n   */\n  hideFirst: PropTypes.bool,\n  /**\n   * Hide the last item of the legend, corresponding to the [max, +infinity] piece.\n   * @default false\n   */\n  hideLast: PropTypes.bool,\n  /**\n   * Space between two legend items (in px).\n   * @default 10\n   */\n  itemGap: PropTypes.number,\n  /**\n   * Height of the item mark (in px).\n   * @default 20\n   */\n  itemMarkHeight: PropTypes.number,\n  /**\n   * Width of the item mark (in px).\n   * @default 20\n   */\n  itemMarkWidth: PropTypes.number,\n  /**\n   * Format the legend labels.\n   * @param {PiecewiseLabelFormatterParams} params The bound of the piece to format.\n   * @returns {string|null} The displayed label, or `null` to skip the item.\n   */\n  labelFormatter: PropTypes.func,\n  /**\n   * Style applied to legend labels.\n   * @default theme.typography.subtitle1\n   */\n  labelStyle: PropTypes.object,\n  /**\n   * Space between the mark and the label (in px).\n   * @default 5\n   */\n  markGap: PropTypes.number,\n  /**\n   * Callback fired when a legend item is clicked.\n   * @param {React.MouseEvent<SVGRectElement, MouseEvent>} event The click event.\n   * @param {PiecewiseColorLegendItemContext} legendItem The legend item data.\n   * @param {number} index The index of the clicked legend item.\n   */\n  onItemClick: PropTypes.func,\n  /**\n   * Legend padding (in px).\n   * Can either be a single number, or an object with top, left, bottom, right properties.\n   * @default 10\n   */\n  padding: PropTypes.oneOfType([PropTypes.number, PropTypes.shape({\n    bottom: PropTypes.number,\n    left: PropTypes.number,\n    right: PropTypes.number,\n    top: PropTypes.number\n  })]),\n  /**\n   * The position of the legend.\n   */\n  position: PropTypes.shape({\n    horizontal: PropTypes.oneOf(['left', 'middle', 'right']).isRequired,\n    vertical: PropTypes.oneOf(['bottom', 'middle', 'top']).isRequired\n  }).isRequired\n} : void 0;\nexport { PiecewiseColorLegend };"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}