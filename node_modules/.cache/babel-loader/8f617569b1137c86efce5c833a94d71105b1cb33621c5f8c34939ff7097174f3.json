{"ast":null,"code":"var _jsxFileName = \"D:\\\\Vaishali\\\\demo2\\\\src\\\\Chart.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport { Pie } from \"react-chartjs-2\";\nimport Chart from \"chart.js/auto\"; // Importing chart.js\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst GHGDisclosure = () => {\n  _s();\n  // State for emissions data\n  const [data] = useState({\n    totalCO2: 46,\n    byScopes: [8, 0.8, 91.1],\n    // Scope 1, Scope 2, Scope 3 percentages\n    byCategories: {\n      Heating: 11.6,\n      OfficeWaste: 2.5,\n      Depreciation: 71.4,\n      IT: 11.9,\n      Electricity: 2.6\n    }\n  });\n\n  // Pie chart data for Scope emissions\n  const scopeChartData = {\n    labels: [\"Scope 1\", \"Scope 2\", \"Scope 3\"],\n    datasets: [{\n      data: data.byScopes,\n      backgroundColor: [\"#4caf50\", \"#8bc34a\", \"#c5e1a5\"] // Colors for the slices\n    }]\n  };\n\n  // Pie chart data for Categories emissions\n  const categoryChartData = {\n    labels: Object.keys(data.byCategories),\n    datasets: [{\n      data: Object.values(data.byCategories),\n      backgroundColor: [\"#4caf50\", \"#8bc34a\", \"#c5e1a5\", \"#81c784\", \"#aed581\"] // Colors for the slices\n    }]\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Your Company GHG Disclosure\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"carbon-footprint\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Your Carbon Footprint\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"carbon-summary\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"carbon-total\",\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            children: [data.totalCO2, \" kg CO2e\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 49,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: \"Total CO2 Emissions\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 50,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"scope-pie\",\n          children: [/*#__PURE__*/_jsxDEV(Pie, {\n            data: scopeChartData\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 54,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n            children: \"By Scopes\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 55,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"emission-categories\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Emissions by Categories\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"category-pie\",\n        children: [/*#__PURE__*/_jsxDEV(Pie, {\n          data: categoryChartData\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"Emissions by Categories\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"scope-info\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"What are scopes?\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"scope-explanation\",\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n            children: \"Scope 1:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 71,\n            columnNumber: 14\n          }, this), \" Direct emissions from the combustion of fuel in assets that a company operates, such as fuel emissions from company-owned cars, diesel generators, gas boilers, and air-conditioning leaks.\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n            children: \"Scope 2:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 72,\n            columnNumber: 14\n          }, this), \" Indirect emissions from the generation of energy purchased from a utility provider, such as heating, cooling, steam, and electricity.\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n            children: \"Scope 3:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 73,\n            columnNumber: 14\n          }, this), \" All indirect greenhouse gas emissions that do not fall under scope 2, including emissions from purchased goods and services, capital goods, upstream transport, business travel, and waste disposal.\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 42,\n    columnNumber: 5\n  }, this);\n};\n_s(GHGDisclosure, \"rV8adihwNbBGWdKACcu8T/MLuJc=\");\n_c = GHGDisclosure;\nexport default GHGDisclosure;\nvar _c;\n$RefreshReg$(_c, \"GHGDisclosure\");","map":{"version":3,"names":["React","useState","Pie","Chart","jsxDEV","_jsxDEV","GHGDisclosure","_s","data","totalCO2","byScopes","byCategories","Heating","OfficeWaste","Depreciation","IT","Electricity","scopeChartData","labels","datasets","backgroundColor","categoryChartData","Object","keys","values","className","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["D:/Vaishali/demo2/src/Chart.jsx"],"sourcesContent":["import React, { useState } from \"react\";\r\nimport { Pie } from \"react-chartjs-2\";\r\nimport Chart from \"chart.js/auto\"; // Importing chart.js\r\n\r\nconst GHGDisclosure = () => {\r\n  // State for emissions data\r\n  const [data] = useState({\r\n    totalCO2: 46,\r\n    byScopes: [8, 0.8, 91.1], // Scope 1, Scope 2, Scope 3 percentages\r\n    byCategories: {\r\n      Heating: 11.6,\r\n      OfficeWaste: 2.5,\r\n      Depreciation: 71.4,\r\n      IT: 11.9,\r\n      Electricity: 2.6,\r\n    },\r\n  });\r\n\r\n  // Pie chart data for Scope emissions\r\n  const scopeChartData = {\r\n    labels: [\"Scope 1\", \"Scope 2\", \"Scope 3\"],\r\n    datasets: [\r\n      {\r\n        data: data.byScopes,\r\n        backgroundColor: [\"#4caf50\", \"#8bc34a\", \"#c5e1a5\"], // Colors for the slices\r\n      },\r\n    ],\r\n  };\r\n\r\n  // Pie chart data for Categories emissions\r\n  const categoryChartData = {\r\n    labels: Object.keys(data.byCategories),\r\n    datasets: [\r\n      {\r\n        data: Object.values(data.byCategories),\r\n        backgroundColor: [\"#4caf50\", \"#8bc34a\", \"#c5e1a5\", \"#81c784\", \"#aed581\"], // Colors for the slices\r\n      },\r\n    ],\r\n  };\r\n\r\n  return (\r\n    <div className=\"container\">\r\n      <h1>Your Company GHG Disclosure</h1>\r\n      \r\n      <div className=\"carbon-footprint\">\r\n        <h2>Your Carbon Footprint</h2>\r\n        <div className=\"carbon-summary\">\r\n          <div className=\"carbon-total\">\r\n            <h3>{data.totalCO2} kg CO2e</h3>\r\n            <p>Total CO2 Emissions</p>\r\n          </div>\r\n\r\n          <div className=\"scope-pie\">\r\n            <Pie data={scopeChartData} />\r\n            <h3>By Scopes</h3>\r\n          </div>\r\n        </div>\r\n      </div>\r\n\r\n      <div className=\"emission-categories\">\r\n        <h2>Emissions by Categories</h2>\r\n        <div className=\"category-pie\">\r\n          <Pie data={categoryChartData} />\r\n          <h3>Emissions by Categories</h3>\r\n        </div>\r\n      </div>\r\n\r\n      <div className=\"scope-info\">\r\n        <h3>What are scopes?</h3>\r\n        <div className=\"scope-explanation\">\r\n          <p><strong>Scope 1:</strong> Direct emissions from the combustion of fuel in assets that a company operates, such as fuel emissions from company-owned cars, diesel generators, gas boilers, and air-conditioning leaks.</p>\r\n          <p><strong>Scope 2:</strong> Indirect emissions from the generation of energy purchased from a utility provider, such as heating, cooling, steam, and electricity.</p>\r\n          <p><strong>Scope 3:</strong> All indirect greenhouse gas emissions that do not fall under scope 2, including emissions from purchased goods and services, capital goods, upstream transport, business travel, and waste disposal.</p>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default GHGDisclosure;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}